// Code generated by MockGen. DO NOT EDIT.
// Source: api.go
//
// Generated by this command:
//
//	mockgen -source=api.go -destination ../mock/clans/api.go -package clans
//

// Package clans is a generated GoMock package.
package clans

import (
	reflect "reflect"
	clans "wfs/backend2/infra/clans"

	gomock "go.uber.org/mock/gomock"
)

// MockAPI is a mock of API interface.
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
	isgomock struct{}
}

// MockAPIMockRecorder is the mock recorder for MockAPI.
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance.
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// FetchAutoComplete mocks base method.
func (m *MockAPI) FetchAutoComplete(search string) (clans.Autocomplete, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchAutoComplete", search)
	ret0, _ := ret[0].(clans.Autocomplete)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchAutoComplete indicates an expected call of FetchAutoComplete.
func (mr *MockAPIMockRecorder) FetchAutoComplete(search any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchAutoComplete", reflect.TypeOf((*MockAPI)(nil).FetchAutoComplete), search)
}
