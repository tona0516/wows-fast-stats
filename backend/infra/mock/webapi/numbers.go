// Code generated by MockGen. DO NOT EDIT.
// Source: numbers.go
//
// Generated by this command:
//
//	mockgen -source=numbers.go -destination ../mock/webapi/numbers.go -package webapi
//

// Package webapi is a generated GoMock package.
package webapi

import (
	reflect "reflect"
	response "wfs/backend/infra/response"

	gomock "go.uber.org/mock/gomock"
)

// MockNumbers is a mock of Numbers interface.
type MockNumbers struct {
	ctrl     *gomock.Controller
	recorder *MockNumbersMockRecorder
	isgomock struct{}
}

// MockNumbersMockRecorder is the mock recorder for MockNumbers.
type MockNumbersMockRecorder struct {
	mock *MockNumbers
}

// NewMockNumbers creates a new mock instance.
func NewMockNumbers(ctrl *gomock.Controller) *MockNumbers {
	mock := &MockNumbers{ctrl: ctrl}
	mock.recorder = &MockNumbersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNumbers) EXPECT() *MockNumbersMockRecorder {
	return m.recorder
}

// ExpectedStats mocks base method.
func (m *MockNumbers) ExpectedStats() (response.ExpectedStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExpectedStats")
	ret0, _ := ret[0].(response.ExpectedStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExpectedStats indicates an expected call of ExpectedStats.
func (mr *MockNumbersMockRecorder) ExpectedStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExpectedStats", reflect.TypeOf((*MockNumbers)(nil).ExpectedStats))
}
