// Code generated by MockGen. DO NOT EDIT.
// Source: unofficial_wargaming.go
//
// Generated by this command:
//
//	mockgen -source=unofficial_wargaming.go -destination ../mock/webapi/unofficial_wargaming.go -package webapi
//

// Package webapi is a generated GoMock package.
package webapi

import (
	reflect "reflect"
	response "wfs/backend/infra/response"

	gomock "go.uber.org/mock/gomock"
)

// MockUnofficialWargaming is a mock of UnofficialWargaming interface.
type MockUnofficialWargaming struct {
	ctrl     *gomock.Controller
	recorder *MockUnofficialWargamingMockRecorder
	isgomock struct{}
}

// MockUnofficialWargamingMockRecorder is the mock recorder for MockUnofficialWargaming.
type MockUnofficialWargamingMockRecorder struct {
	mock *MockUnofficialWargaming
}

// NewMockUnofficialWargaming creates a new mock instance.
func NewMockUnofficialWargaming(ctrl *gomock.Controller) *MockUnofficialWargaming {
	mock := &MockUnofficialWargaming{ctrl: ctrl}
	mock.recorder = &MockUnofficialWargamingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnofficialWargaming) EXPECT() *MockUnofficialWargamingMockRecorder {
	return m.recorder
}

// ClansAutoComplete mocks base method.
func (m *MockUnofficialWargaming) ClansAutoComplete(search string) (response.UWGClansAutocomplete, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClansAutoComplete", search)
	ret0, _ := ret[0].(response.UWGClansAutocomplete)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClansAutoComplete indicates an expected call of ClansAutoComplete.
func (mr *MockUnofficialWargamingMockRecorder) ClansAutoComplete(search any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClansAutoComplete", reflect.TypeOf((*MockUnofficialWargaming)(nil).ClansAutoComplete), search)
}
