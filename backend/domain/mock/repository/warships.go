// Code generated by MockGen. DO NOT EDIT.
// Source: warships.go
//
// Generated by this command:
//
//	mockgen -source=warships.go -destination ../mock/repository/warships.go -package repository
//

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"
	model "wfs/backend/domain/model"

	gomock "go.uber.org/mock/gomock"
)

// MockWarshipFetcher is a mock of WarshipFetcher interface.
type MockWarshipFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockWarshipFetcherMockRecorder
	isgomock struct{}
}

// MockWarshipFetcherMockRecorder is the mock recorder for MockWarshipFetcher.
type MockWarshipFetcherMockRecorder struct {
	mock *MockWarshipFetcher
}

// NewMockWarshipFetcher creates a new mock instance.
func NewMockWarshipFetcher(ctrl *gomock.Controller) *MockWarshipFetcher {
	mock := &MockWarshipFetcher{ctrl: ctrl}
	mock.recorder = &MockWarshipFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWarshipFetcher) EXPECT() *MockWarshipFetcherMockRecorder {
	return m.recorder
}

// Fetch mocks base method.
func (m *MockWarshipFetcher) Fetch() (model.Warships, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fetch")
	ret0, _ := ret[0].(model.Warships)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fetch indicates an expected call of Fetch.
func (mr *MockWarshipFetcherMockRecorder) Fetch() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockWarshipFetcher)(nil).Fetch))
}
