// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	model "wfs/backend/domain/model"

	mock "github.com/stretchr/testify/mock"
)

// UnofficialWargamingInterface is an autogenerated mock type for the UnofficialWargamingInterface type
type UnofficialWargamingInterface struct {
	mock.Mock
}

// ClansAutoComplete provides a mock function with given fields: search
func (_m *UnofficialWargamingInterface) ClansAutoComplete(search string) (model.UWGClansAutocomplete, error) {
	ret := _m.Called(search)

	if len(ret) == 0 {
		panic("no return value specified for ClansAutoComplete")
	}

	var r0 model.UWGClansAutocomplete
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (model.UWGClansAutocomplete, error)); ok {
		return rf(search)
	}
	if rf, ok := ret.Get(0).(func(string) model.UWGClansAutocomplete); ok {
		r0 = rf(search)
	} else {
		r0 = ret.Get(0).(model.UWGClansAutocomplete)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(search)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewUnofficialWargamingInterface creates a new instance of UnofficialWargamingInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnofficialWargamingInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnofficialWargamingInterface {
	mock := &UnofficialWargamingInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
