// Code generated by MockGen. DO NOT EDIT.
// Source: storage_interface.go
//
// Generated by this command:
//
//	mockgen -source=storage_interface.go -destination ../mock/repository/storage_interface.go -package repository
//

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"
	data "wfs/backend/data"

	gomock "go.uber.org/mock/gomock"
)

// MockStorageInterface is a mock of StorageInterface interface.
type MockStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStorageInterfaceMockRecorder
}

// MockStorageInterfaceMockRecorder is the mock recorder for MockStorageInterface.
type MockStorageInterfaceMockRecorder struct {
	mock *MockStorageInterface
}

// NewMockStorageInterface creates a new mock instance.
func NewMockStorageInterface(ctrl *gomock.Controller) *MockStorageInterface {
	mock := &MockStorageInterface{ctrl: ctrl}
	mock.recorder = &MockStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageInterface) EXPECT() *MockStorageInterfaceMockRecorder {
	return m.recorder
}

// AlertPlayers mocks base method.
func (m *MockStorageInterface) AlertPlayers() ([]data.AlertPlayer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AlertPlayers")
	ret0, _ := ret[0].([]data.AlertPlayer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AlertPlayers indicates an expected call of AlertPlayers.
func (mr *MockStorageInterfaceMockRecorder) AlertPlayers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AlertPlayers", reflect.TypeOf((*MockStorageInterface)(nil).AlertPlayers))
}

// DataVersion mocks base method.
func (m *MockStorageInterface) DataVersion() (uint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataVersion")
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DataVersion indicates an expected call of DataVersion.
func (mr *MockStorageInterfaceMockRecorder) DataVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataVersion", reflect.TypeOf((*MockStorageInterface)(nil).DataVersion))
}

// ExpectedStats mocks base method.
func (m *MockStorageInterface) ExpectedStats() (data.ExpectedStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExpectedStats")
	ret0, _ := ret[0].(data.ExpectedStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExpectedStats indicates an expected call of ExpectedStats.
func (mr *MockStorageInterfaceMockRecorder) ExpectedStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExpectedStats", reflect.TypeOf((*MockStorageInterface)(nil).ExpectedStats))
}

// IsExistAlertPlayers mocks base method.
func (m *MockStorageInterface) IsExistAlertPlayers() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsExistAlertPlayers")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsExistAlertPlayers indicates an expected call of IsExistAlertPlayers.
func (mr *MockStorageInterfaceMockRecorder) IsExistAlertPlayers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsExistAlertPlayers", reflect.TypeOf((*MockStorageInterface)(nil).IsExistAlertPlayers))
}

// IsExistUserConfig mocks base method.
func (m *MockStorageInterface) IsExistUserConfig() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsExistUserConfig")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsExistUserConfig indicates an expected call of IsExistUserConfig.
func (mr *MockStorageInterfaceMockRecorder) IsExistUserConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsExistUserConfig", reflect.TypeOf((*MockStorageInterface)(nil).IsExistUserConfig))
}

// OwnIGN mocks base method.
func (m *MockStorageInterface) OwnIGN() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OwnIGN")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OwnIGN indicates an expected call of OwnIGN.
func (mr *MockStorageInterfaceMockRecorder) OwnIGN() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OwnIGN", reflect.TypeOf((*MockStorageInterface)(nil).OwnIGN))
}

// UserConfig mocks base method.
func (m *MockStorageInterface) UserConfig() (data.UserConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserConfig")
	ret0, _ := ret[0].(data.UserConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserConfig indicates an expected call of UserConfig.
func (mr *MockStorageInterfaceMockRecorder) UserConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserConfig", reflect.TypeOf((*MockStorageInterface)(nil).UserConfig))
}

// UserConfigV2 mocks base method.
func (m *MockStorageInterface) UserConfigV2() (data.UserConfigV2, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserConfigV2")
	ret0, _ := ret[0].(data.UserConfigV2)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserConfigV2 indicates an expected call of UserConfigV2.
func (mr *MockStorageInterfaceMockRecorder) UserConfigV2() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserConfigV2", reflect.TypeOf((*MockStorageInterface)(nil).UserConfigV2))
}

// WriteAlertPlayers mocks base method.
func (m *MockStorageInterface) WriteAlertPlayers(players []data.AlertPlayer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteAlertPlayers", players)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteAlertPlayers indicates an expected call of WriteAlertPlayers.
func (mr *MockStorageInterfaceMockRecorder) WriteAlertPlayers(players any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteAlertPlayers", reflect.TypeOf((*MockStorageInterface)(nil).WriteAlertPlayers), players)
}

// WriteDataVersion mocks base method.
func (m *MockStorageInterface) WriteDataVersion(version uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteDataVersion", version)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteDataVersion indicates an expected call of WriteDataVersion.
func (mr *MockStorageInterfaceMockRecorder) WriteDataVersion(version any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteDataVersion", reflect.TypeOf((*MockStorageInterface)(nil).WriteDataVersion), version)
}

// WriteExpectedStats mocks base method.
func (m *MockStorageInterface) WriteExpectedStats(expectedStats data.ExpectedStats) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteExpectedStats", expectedStats)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteExpectedStats indicates an expected call of WriteExpectedStats.
func (mr *MockStorageInterfaceMockRecorder) WriteExpectedStats(expectedStats any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteExpectedStats", reflect.TypeOf((*MockStorageInterface)(nil).WriteExpectedStats), expectedStats)
}

// WriteOwnIGN mocks base method.
func (m *MockStorageInterface) WriteOwnIGN(ign string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteOwnIGN", ign)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteOwnIGN indicates an expected call of WriteOwnIGN.
func (mr *MockStorageInterfaceMockRecorder) WriteOwnIGN(ign any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteOwnIGN", reflect.TypeOf((*MockStorageInterface)(nil).WriteOwnIGN), ign)
}

// WriteUserConfig mocks base method.
func (m *MockStorageInterface) WriteUserConfig(config data.UserConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteUserConfig", config)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteUserConfig indicates an expected call of WriteUserConfig.
func (mr *MockStorageInterfaceMockRecorder) WriteUserConfig(config any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteUserConfig", reflect.TypeOf((*MockStorageInterface)(nil).WriteUserConfig), config)
}

// WriteUserConfigV2 mocks base method.
func (m *MockStorageInterface) WriteUserConfigV2(config data.UserConfigV2) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteUserConfigV2", config)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteUserConfigV2 indicates an expected call of WriteUserConfigV2.
func (mr *MockStorageInterfaceMockRecorder) WriteUserConfigV2(config any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteUserConfigV2", reflect.TypeOf((*MockStorageInterface)(nil).WriteUserConfigV2), config)
}
