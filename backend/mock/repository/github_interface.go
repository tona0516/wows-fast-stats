// Code generated by MockGen. DO NOT EDIT.
// Source: github_interface.go
//
// Generated by this command:
//
//	mockgen -source=github_interface.go -destination ../mock/repository/github_interface.go -package repository
//

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"
	data "wfs/backend/data"

	gomock "go.uber.org/mock/gomock"
)

// MockGithubInterface is a mock of GithubInterface interface.
type MockGithubInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGithubInterfaceMockRecorder
	isgomock struct{}
}

// MockGithubInterfaceMockRecorder is the mock recorder for MockGithubInterface.
type MockGithubInterfaceMockRecorder struct {
	mock *MockGithubInterface
}

// NewMockGithubInterface creates a new mock instance.
func NewMockGithubInterface(ctrl *gomock.Controller) *MockGithubInterface {
	mock := &MockGithubInterface{ctrl: ctrl}
	mock.recorder = &MockGithubInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGithubInterface) EXPECT() *MockGithubInterfaceMockRecorder {
	return m.recorder
}

// LatestRelease mocks base method.
func (m *MockGithubInterface) LatestRelease() (data.GHLatestRelease, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LatestRelease")
	ret0, _ := ret[0].(data.GHLatestRelease)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LatestRelease indicates an expected call of LatestRelease.
func (mr *MockGithubInterfaceMockRecorder) LatestRelease() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LatestRelease", reflect.TypeOf((*MockGithubInterface)(nil).LatestRelease))
}
